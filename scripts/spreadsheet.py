import pandas as pd

df = pd.read_csv('data/raw.csv')
grouped = df.groupby('id')

stats = {
    'minutesPlayed': 'Minutes',
    'goals': 'Goals',
    'goalAssist': 'Assists',
    'goalAttempts': 'Goal Attempts',
    'onTargetScoringAttempt': 'Shots on Target',
    'savedShotsFromInsideTheBox': 'Saved Shots - Inside Box',
    'bigChanceMissed': 'Big Chances (Missed)',
    'keyPass': 'Chances Created',
    'bigChanceCreated': 'Big Chances Created',
    'touches': 'Total Touches',
    'totalCross': 'Crosses',
    'accurateCross': 'Accurate Crosses'
}

positions = {
    511: 'M',
    6276: 'D',
    6365: 'M',
    6375: 'D',
    6841: 'D',
    7017: 'M',
    7030: 'M',
    14787: 'D',
    14856: 'D',
    14895: 'D',
    15177: 'D',
    15412: 'M',
    18742: 'M',
    19221: 'D',
    21091: 'M',
    22188: 'M',
    22271: 'F',
    22370: 'M',
    22413: 'F',
    22454: 'D',
    22456: 'D',
    22497: 'M',
    22520: 'M',
    22525: 'D',
    24374: 'D',
    24844: 'D',
    25122: 'F',
    26448: 'M',
    27187: 'D',
    27226: 'D',
    28395: 'M',
    30447: 'M',
    35765: 'D',
    35799: 'D',
    35803: 'M',
    35890: 'M',
    35910: 'D',
    36132: 'D',
    40980: 'M',
    41581: 'M',
    41807: 'D',
    44222: 'M',
    48613: 'M',
    49931: 'D',
    50128: 'M',
    50190: 'D',
    50233: 'D',
    65607: 'M',
    65717: 'F',
    78895: 'M',
    90228: 'D',
    94772: 'M',
    94781: 'F',
    96785: 'D',
    98048: 'M',
    98200: 'D',
    98201: 'D',
    100622: 'F',
    100744: 'M',
    109362: 'D',
    109608: 'M',
    111819: 'M',
    112559: 'F',
    112634: 'M',
    112653: 'D',
    113409: 'M',
    116138: 'D',
    116606: 'M',
    118602: 'D',
    118615: 'M',
    121148: 'F',
    127226: 'M',
    134383: 'M',
    135662: 'M',
    136164: 'D',
    136169: 'F',
    136171: 'F',
    138553: 'F',
    149266: 'M',
    149267: 'D',
    149737: 'D',
    149740: 'D',
    149955: 'D',
    149956: 'D',
    149958: 'M',
    150006: 'M',
    150205: 'M',
    150222: 'D',
    150232: 'M',
    150325: 'M',
    150581: 'M',
    150902: 'D',
    151700: 'M',
    152079: 'M',
    152320: 'M',
    156643: 'M',
    156706: 'F',
    157300: 'D',
    158757: 'M',
    170345: 'M',
    171713: 'M',
    181893: 'M',
    181901: 'M',
    226716: 'F',
    226762: 'M',
    226784: 'M',
    226810: 'M',
    226958: 'D',
    227074: 'D',
    228334: 'M',
    228336: 'M',
    228348: 'D',
    228364: 'M',
    230288: 'M',
    231038: 'M',
    232068: 'D',
    232218: 'F',
    232320: 'D',
    240126: 'M',
    241686: 'M',
    277373: 'M',
    279513: 'M',
    281007: 'D',
    281015: 'M',
    290943: 'M',
    307332: 'F',
    312708: 'D',
    313738: 'D',
    313746: 'D',
    320495: 'F',
    322083: 'M',
    322337: 'D',
    322339: 'D',
    322513: 'M',
    322551: 'M',
    325659: 'D',
    325905: 'D',
    328247: 'M',
    337337: 'D',
    340491: 'M',
    341107: 'M',
    344883: 'F',
    346406: 'M',
    352542: 'D',
    355174: 'M',
    357772: 'M',
    362042: 'D',
    381820: 'F',
    383810: 'D',
    546800: 'M',
    548312: 'M',
    548640: 'D',
    548762: 'M',
    548806: 'F',
    563908: 'M',
    567236: 'M',
    577266: 'D',
    584060: 'M',
    591776: 'M',
    591876: 'F',
    604932: 'D',
    611852: 'M',
    792753: 'D',
    793155: 'D',
    793388: 'D',
    793401: 'D',
    793836: 'M',
    794066: 'M',
    794294: 'D',
    794371: 'D',
    794679: 'F',
    794782: 'M',
    795107: 'D',
    795109: 'D',
    795112: 'F',
    795154: 'D',
    796081: 'F',
    796720: 'D',
    796821: 'M',
    796937: 'M',
    796938: 'F',
    796943: 'F',
    800447: 'D',
    804459: 'D',
    810696: 'F',
    822219: 'D',
    822231: 'M',
    822749: 'M',
    823700: 'D',
    823706: 'M',
    823726: 'M',
    823994: 'M',
    824113: 'M',
    824584: 'M',
    826257: 'M',
    826649: 'M',
    828166: 'F',
    828168: 'F',
    833947: 'M',
    834131: 'F',
    834733: 'F',
    836886: 'M',
    837012: 'M',
    838805: 'M',
    839507: 'D',
    839953: 'M',
    841424: 'M',
    841580: 'M',
    841658: 'D',
    842536: 'D',
    843966: 'F',
    844292: 'F',
    845553: 'M',
    846169: 'M',
    856160: 'D',
    858295: 'D',
    859332: 'D',
    861311: 'M',
    862550: 'M',
    863133: 'F',
    865636: 'M',
    867806: 'M',
    870528: 'D',
    870532: 'M',
    873632: 'M',
    874952: 'M',
    875549: 'F',
    875910: 'D',
    876494: 'M',
    876595: 'M',
    876599: 'F',
    877236: 'M',
    877364: 'M',
    877456: 'M',
    877656: 'M',
    878227: 'D',
    878305: 'D',
    878443: 'M',
    878599: 'M',
    878844: 'M',
    880774: 'M',
    893613: 'F',
    894197: 'D',
    894245: 'D',
    900079: 'M',
    900214: 'D',
    900264: 'D',
    902084: 'M',
    906751: 'M',
    913584: 'M',
    917352: 'M',
    920744: 'M',
    920993: 'D',
    921151: 'D',
    921153: 'D',
    921442: 'F',
    922967: 'M',
    929978: 'D',
    930080: 'M',
    932826: 'F',
    933263: 'M',
    934409: 'D',
    944392: 'F',
    950638: 'D',
    951553: 'F',
    951829: 'F',
    953953: 'F',
    956798: 'M',
    957143: 'M',
    958915: 'D',
    965357: 'M',
    966840: 'F',
    975575: 'M',
    978521: 'F',
    979120: 'M',
    980454: 'M',
    980538: 'D',
    980655: 'D',
    980914: 'F',
    980915: 'M',
    982201: 'D',
    984199: 'M',
    984984: 'M',
    985399: 'D',
    987066: 'M',
    989864: 'M',
    991340: 'M',
    996734: 'M',
    1001741: 'M',
    1019012: 'D',
    1020206: 'M',
    1021757: 'D',
    1024875: 'M',
    1029163: 'M',
    1029456: 'F',
    1031399: 'D',
    1033794: 'M',
    1034279: 'M'
}

cumulative_stats = []
c = 0
for id, cum in grouped:
    player = {'id': id, 'Name': cum.iloc[0]['name'], 'Team': cum.iloc[0]['team'], 'Position': positions[id]}
    summed = cum.sum()
    for stat in ['minutesPlayed', 'goals', 'goalAssist', 'goalAttempts', 'onTargetScoringAttempt',
                 'savedShotsFromInsideTheBox', 'bigChanceMissed', 'keyPass', 'bigChanceCreated', 'touches',
                 'totalCross', 'accurateCross']:
        player[stats[stat]] = summed[stat]
    if summed['goalAttempts'] > 0:
        player['Minutes per Goal Attempt'] = round(summed['minutesPlayed'] / summed['goalAttempts'], 1)
    else:
        player['Minutes per Goal Attempt'] = ''
    cumulative_stats.append(player)

cum_df = pd.DataFrame(cumulative_stats)
cum_df.sort_values('Goal Attempts', inplace=True, ascending=False)
cum_df.to_csv('data/cumulative.csv', index=False)
